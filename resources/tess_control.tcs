#version 410

layout(vertices = 4) out; //Four control points per patch
in vec3[] vInterpSurfPos;
out vec3 tcInterpSurfPos[];

in vec3[] vInterpSurfNorm;
out vec3 tcInterpSurfNorm[];

void main() {
    tcInterpSurfPos[gl_InvocationID] = vInterpSurfPos[gl_InvocationID];
    tcInterpSurfNorm[gl_InvocationID] = vInterpSurfNorm[gl_InvocationID];
    if(gl_InvocationID == 0) { //Only have to define tessellation once per vertex patch

        //Make TessLevelOuter a uniform variable (in geom shader uniform *2-1)
        //Determines number of subdivisions per line
        gl_TessLevelOuter[0] = 1; //Tesselation in y for control points given (ie # of lines added)
        
        gl_TessLevelOuter[1] = 10; //Tesselation in x for line generated (only need 1 line for x since we are dividing based upon the y parameter)        
    }

    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
}
